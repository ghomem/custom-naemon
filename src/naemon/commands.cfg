###############################################################################
# COMMANDS.CFG - SAMPLE COMMAND DEFINITIONS FOR NAGIOS 4.3.4
#
#
# NOTES: This config file provides you with some example command definitions
#        that you can reference in host, service, and contact definitions.
#       
#        You don't need to keep commands in a separate file from your other
#        object definitions.  This has been done just to make things easier to
#        understand.
#
###############################################################################


################################################################################
#
# SAMPLE NOTIFICATION COMMANDS
#
# These are some example notification commands.  They may or may not work on
# your system without modification.  As an example, some systems will require 
# you to use "/usr/bin/mailx" instead of "/usr/bin/mail" in the commands below.
#
################################################################################

# 'notify-host-by-email' command definition
define command{
        command_name    notify-host-by-email
        command_line    /opt/puppet-infrastructure/bin/notify-host-by-email.sh "$NOTIFICATIONTYPE$" "$HOSTNAME$" "$HOSTSTATE$" "$HOSTADDRESS$" "$HOSTOUTPUT$" "$LONGDATETIME$" "$CONTACTEMAIL$"
        }

# 'notify-service-by-email' command definition
define command{
        command_name    notify-service-by-email
        command_line    /opt/puppet-infrastructure/bin/notify-service-by-email.sh "$NOTIFICATIONTYPE$" "$SERVICEDESC$" "$HOSTALIAS$" "$HOSTADDRESS$" "$SERVICESTATE$" "$LONGDATETIME$" "$SERVICEOUTPUT$" "$HOSTNAME$" "$SERVICESTATE$" "$CONTACTEMAIL$"
        }

################################################################################
#
# SAMPLE HOST CHECK COMMANDS
#
################################################################################


# This command checks to see if a host is "alive" by pinging it
# The check must result in a 100% packet loss or 5 second (5000ms) round trip 
# average time to produce a critical error.
# Note: Five ICMP echo packets are sent (determined by the '-p 5' argument)

# 'check-host-alive' command definition
define command{
        command_name    check-host-alive
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5
        }




################################################################################
#
# SAMPLE SERVICE CHECK COMMANDS
#
# These are some example service check commands.  They may or may not work on
# your system, as they must be modified for your plugins.  See the HTML 
# documentation on the plugins for examples of how to configure command definitions.
#
# NOTE:  The following 'check_local_...' functions are designed to monitor
#        various metrics on the host that Nagios is running on (i.e. this one).
################################################################################

# 'check_local_disk' command definition
define command{
        command_name    check_local_disk
        command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
        }


# 'check_local_load' command definition
define command{
        command_name    check_local_load
        command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
        }


# 'check_local_procs' command definition
define command{
        command_name    check_local_procs
        command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$
        }


# 'check_local_users' command definition
define command{
        command_name    check_local_users
        command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
        }


# 'check_local_swap' command definition
define command{
	command_name	check_local_swap
	command_line	$USER1$/check_swap -w $ARG1$ -c $ARG2$
	}


# 'check_local_mrtgtraf' command definition
define command{
	command_name	check_local_mrtgtraf
	command_line	$USER1$/check_mrtgtraf -F $ARG1$ -a $ARG2$ -w $ARG3$ -c $ARG4$ -e $ARG5$
	}


################################################################################
# NOTE:  The following 'check_...' commands are used to monitor services on
#        both local and remote hosts.
################################################################################

# 'check_ftp' command definition
define command{
        command_name    check_ftp
        command_line    $USER1$/check_ftp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_hpjd' command definition
define command{
        command_name    check_hpjd
        command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ $ARG1$
        }


# 'check_snmp' command definition
define command{
        command_name    check_snmp
        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_http' command definition
define command{
        command_name    check_http
        command_line    $USER1$/check_http -I "$HOSTADDRESS$" -H "$_SERVICE_VIRTUAL_HOST$" -p "$_SERVICE_PORT$" -u "$_SERVICE_URI$" -s "$_SERVICE_SEARCH_STRING$" -w "$_SERVICE_RESPONSE_WARNING$" -c "$_SERVICE_RESPONSE_CRITICAL$" -f "$_SERVICE_ON_REDIRECT$" -a "$_SERVICE_AUTH_DATA$" $_SERVICE_PORT$
        }

# 'check_https' command definition
define command {
        command_name     check_https
        command_line     $USER1$/check_http -I "$HOSTADDRESS$" -H "$_SERVICE_VIRTUAL_HOST$" -p "$_SERVICE_PORT$" --ssl -u "$_SERVICE_URI$" -s "$_SERVICE_SEARCH_STRING$" -w "$_SERVICE_RESPONSE_WARNING$" -c "$_SERVICE_RESPONSE_CRITICAL$" -f "$_SERVICE_ON_REDIRECT$" -a "$_SERVICE_AUTH_DATA$" $_SERVICE_PORT$
}


# 'check_ssh' command definition
define command{
	command_name	check_ssh
	command_line	$USER1$/check_ssh $_SERVICE_PORT$ $HOSTADDRESS$
	}


# 'check_dhcp' command definition
define command{
	command_name	check_dhcp
	command_line	$USER1$/check_dhcp $ARG1$
	}


# 'check_ping' command definition
define command{
        command_name    check_ping
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
        }


# 'check_pop' command definition
define command{
        command_name    check_pop
        command_line    $USER1$/check_pop -H $HOSTADDRESS$ $_SERVICE_PORT$
        }


# 'check_imap' command definition
define command{
        command_name    check_imap
        command_line    $USER1$/check_imap -H $HOSTADDRESS$ -p $_SERVICE_PORT$ $ARG2$
        }


# 'check_smtp' command definition
define command{
        command_name    check_smtp
        command_line    $USER1$/check_smtp -H $HOSTADDRESS$ -p $_SERVICE_PORT$ $ARG2$
        }


# 'check_tcp' command definition
define command{
	command_name	check_tcp
	command_line	$USER1$/check_tcp -H $HOSTADDRESS$ -p $_SERVICE_PORT$ $ARG2$
	}


# 'check_udp' command definition
define command{
	command_name	check_udp
	command_line	$USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
	}


# 'check_nt' command definition
define command{
	command_name	check_nt
	command_line	$USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -v $ARG1$ $ARG2$
	}



################################################################################
#
# SAMPLE PERFORMANCE DATA COMMANDS
#
# These are sample performance data commands that can be used to send performance
# data output to two text files (one for hosts, another for services).  If you
# plan on simply writing performance data out to a file, consider using the 
# host_perfdata_file and service_perfdata_file options in the main config file.
#
################################################################################


# 'process-host-perfdata' command definition
define command{
	command_name	process-host-perfdata
	command_line	/usr/bin/printf "%b" "$LASTHOSTCHECK$\t$HOSTNAME$\t$HOSTSTATE$\t$HOSTATTEMPT$\t$HOSTSTATETYPE$\t$HOSTEXECUTIONTIME$\t$HOSTOUTPUT$\t$HOSTPERFDATA$\n" >> /var/log/nagios/host-perfdata.out
	}


# 'process-service-perfdata' command definition
define command{
	command_name	process-service-perfdata
	command_line	/usr/bin/printf "%b" "$LASTSERVICECHECK$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICESTATE$\t$SERVICEATTEMPT$\t$SERVICESTATETYPE$\t$SERVICEEXECUTIONTIME$\t$SERVICELATENCY$\t$SERVICEOUTPUT$\t$SERVICEPERFDATA$\n" >> /var/log/nagios/service-perfdata.out
	}

#
# definitions for PNP processing commands
# Bulk with NPCD mode
#

define command{
       command_name    process-service-perfdata-file
       command_line    /bin/mv /usr/local/pnp4nagios/var/service-perfdata /usr/local/pnp4nagios/var/spool/pnp4nagios/service-perfdata.$TIMET$
}

define command{
       command_name    process-host-perfdata-file
       command_line    /bin/mv /usr/local/pnp4nagios/var/host-perfdata /usr/local/pnp4nagios/var/spool/pnp4nagios/host-perfdata.$TIMET$
}

define command {
       command_name    get-vmserver-hostlist-into-hostgroup
       command_line    /tmp/get_vm_list_into_hostgroup.sh $HOSTADDRESS$ $ARG1$
}


# 'check_ntp' command definition
define command{
        command_name    check_ntp
        command_line    $USER1$/check_ntp.pl -H $HOSTADDRESS$
        }

define command{
        command_name    ssh_disk
        command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/usr/lib64/nagios/plugins/check_disk -w $_SERVICE_WARNING_THRESHOLD$ -c $_SERVICE_CRITICAL_THRESHOLD$ -p $ARG4$ -m'
        }

define command{
        command_name    ssh_disk_custom
        command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/usr/lib64/nagios/plugins/check_disk -w $_SERVICE_WARNING_THRESHOLD$ -c $_SERVICE_CRITICAL_THRESHOLD$ -p $_SERVICE_PATH_TO_CHECk$ -m'
        }

define command{
        command_name    ssh_zimbra
        command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -t 35 -p $ARG1$ -C '/usr/lib64/nagios/plugins/check_zimbra.pl -C'
        }
        
define command{
        command_name    ssh_sensors
        command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/usr/lib64/nagios/plugins/check_sensors'
        }

# timeout 20 no comando principal porque o check espera 15s
define command{
        command_name    ssh_cpu
        # https://raw.githubusercontent.com/georgehansper/check_cpu.py/master/check_cpu.py
        command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -t 20 -p $ARG1$ -C '/usr/lib64/nagios/plugins/check_cpu.py -p 15 -w $_SERVICE_WARNING_THRESHOLD$ -c $_SERVICE_CRITICAL_THRESHOLD$'
        }

define command{
        command_name    ssh_mem
        # https://raw.githubusercontent.com/justintime/nagios-plugins/master/check_mem/check_mem.pl
        # param -C needs to be verified
        command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -t 20 -p $ARG1$ -C '/usr/lib64/nagios/plugins/check_mem.pl -C -u -w $_SERVICE_WARNING_THRESHOLD$ -c $_SERVICE_CRITICAL_THRESHOLD$'
        }

# este usa custom variables que precisam de estar no template (__WARNING_ROUND_TRIP, __WARNING_PACKETLOSS, ...)
define command{
        command_name    ssh_ping
        command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/usr/lib64/nagios/plugins/check_ping -w $_SERVICE_WARNING_ROUND_TRIP$,$_SERVICE_WARNING_PACKETLOSS$ -c $_SERVICE_CRITICAL_ROUND_TRIP$,$_SERVICE_CRITICAL_PACKETLOSS$ $_SERVICE_TARGET_HOST$'
        }

define command{
        command_name    ssh_dns
        command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/usr/lib64/nagios/plugins/check_dns -H $_SERVICE_DNS_HOST$'
}

define command{
        command_name    ssh_tcp
        command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/usr/lib64/nagios/plugins/check_tcp -p $_SERVICE_TCP_PORT$ -H  $_SERVICE_TARGET_HOST$'
        }

define command {
        command_name    ssh_load
        command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/usr/lib64/nagios/plugins/check_load -r -w $_SERVICE_WARNING_THRESHOLD$ -c $_SERVICE_CRITICAL_THRESHOLD$'
}

# Conta pacotes que se podem fazer upgrade. Warning level definido por parametro ( 1 definido por default no template)
define command {
         command_name                  ssh_package
         command_line                  $USER1$/check_by_ssh -t 30 -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/opt/puppet-infrastructure/bin/check_package_count.sh $_SERVICE_WARNING_THRESHOLD$'
}

# Verifica se o host precisa de um reboot
define command {
         command_name                  ssh_check_reboot
         command_line                  $USER1$/check_by_ssh -t 30 -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/opt/puppet-infrastructure/bin/check_reboot_required.sh'
}

# Mede bandwidth durante 15 segundos. Manda Warning e Critical por parametro (50 e 80 definido no template). Interface total = 100 mbit
define command {
         command_name                  ssh_bandwidth
         command_line                  $USER1$/check_by_ssh -t 30 -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/opt/puppet-infrastructure/bin/check_bandwidth.sh $_SERVICE_INTERFACE$ 15 $_SERVICE_WARNING_THRESHOLD$ $_SERVICE_CRITICAL_THRESHOLD$ 100'
}

define command {
         command_name                  ssh_file_handles
         command_line                  $USER1$/check_by_ssh -t 30 -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/opt/puppet-infrastructure/bin/check_file_handles.sh'
}

define command {
         command_name                  ssh_netstat_conns
         command_line                  $USER1$/check_by_ssh -t 30 -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/opt/puppet-infrastructure/bin/check_netstat_conns.sh'
}

define command {
         command_name                  ssh_disk_dd_latency
         command_line                  $USER1$/check_by_ssh -t 30 -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/opt/puppet-infrastructure/bin/check_dd_latency.sh /tmp $_SERVICE_WARNING_THRESHOLD$ $_SERVICE_CRITICAL_THRESHOLD$ $_SERVICE_MAX_LATENCY$'
}

define command {
         command_name                  ssh_puppet
         command_line                  $USER1$/check_by_ssh -t 300 -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C 'sudo /opt/puppet-infrastructure/bin/nagios-puppet.sh'
}

define command {
         command_name                  ssh_integrity
         command_line                  $USER1$/check_by_ssh -t 300 -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/opt/puppet-infrastructure/bin/nagios-integrity.sh'
}

define command {
         command_name                  ssh_health_backup
         command_line                  $USER1$/check_by_ssh -t 900 -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C 'sudo /opt/puppet-infrastructure/bin/check-fs-health-backup.sh'
}

define command {
         command_name                  ssh_mysqldump_health
         command_line                  $USER1$/check_by_ssh -t 300 -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/opt/puppet-infrastructure/bin/check-mysqldump-health.sh'
}

define command {
        command_name     ssh_https
        command_line     $USER1$/check_by_ssh -t 300 -H $HOSTADDRESS$ -o "ForwardX11=no" -o"UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p  $ARG1$ -C '/usr/lib64/nagios/plugins/check_http -I "$_SERVICE_IP$" -H "$_SERVICE_VIRTUAL_HOST$" -p "$_SERVICE_PORT$" --ssl -u "$_SERVICE_URI$" -s "$_SERVICE_SEARCH_STRING$" -w "$_SERVICE_RESPONSE_WARNING$" -c "$_SERVICE_RESPONSE_CRITICAL$" -f "$_SERVICE_ON_REDIRECT$" -a "$_SERVICE_AUTH_DATA$"'
}

define command {
        command_name     ssh_ssh
        command_line     $USER1$/check_by_ssh -t 300 -H $HOSTADDRESS$ -o "ForwardX11=no" -o"UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p  $ARG1$ -C '/usr/lib64/nagios/plugins/check_ssh -p "$_SERVICE_TARGET_HOSTSSH_PORT$" "$_SERVICE_TARGET_HOST$"'
}


define command {
        command_name     ssh_ups
        command_line     $USER1$/check_by_ssh -t 300 -H $HOSTADDRESS$ -o "ForwardX11=no" -o"UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p  $ARG1$ -C '/opt/puppet-infrastructure/bin/check-apc.sh'
}

define command {
        command_name     ssh_safe_encryption_check_file_age
        command_line     $USER1$/check_by_ssh -t 300 -H $HOSTADDRESS$ -o "ForwardX11=no" -o"UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/usr/bin/perl /usr/lib64/nagios/plugins/check_file_age -w 86400 -c 86400 -W 100 -C 100 -f /u01/app/oracle/mftxfer/archive/`date -d "yesterday 13:00" +%Y%m%d`_12A.zip'
}

define command {
        command_name     ssh_safe_encryption_excl_check_file_age
        command_line     $USER1$/check_by_ssh -t 300 -H $HOSTADDRESS$ -o "ForwardX11=no" -o"UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/usr/bin/perl /usr/lib64/nagios/plugins/check_file_age -w 86400 -c 86400 -W 100 -C 100 -f /u01/app/oracle/mftxfer/archive/EXCL_`date -d "yesterday 13:00" +%Y%m%d`_12A.zip'
}

define command {
        command_name     ssh_netstat_conns_per_ip
        command_line     $USER1$/check_by_ssh -t 300 -H $HOSTADDRESS$ -o "ForwardX11=no" -o"UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p  $ARG1$ -C '/opt/puppet-infrastructure/bin/check_netstat_cip.sh $ARG2$'
}

# added by tiago in 09/04/2021
define command {
         command_name    ssh_check_elastic
         command_line    $USER1$/check_by_ssh -t 300 -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/opt/puppet-infrastructure/bin/elastic_query_check.py --offset $ARG2$ --sample_size=$ARG3$ -q "$_SERVICE_QUERY_BASE$ $_SERVICE_QUERY_USERS$" '
}

# Reports the OS version
define command {
         command_name                  ssh_os_version
         command_line                  $USER1$/check_by_ssh -t 30 -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/opt/puppet-infrastructure/bin/check_os_version.sh'
}

# Check for the http certificate age
define command {
         command_name                  check_https_certificate
         command_line                  $USER1$/check_by_ssh -t 30 -H $HOSTADDRESS$ -o "ForwardX11=no" -o "UserKnownHostsFile=/home/naemon/.ssh/known_hosts_$ARG1$" -p $ARG1$ -C '/opt/puppet-infrastructure/bin/check_http_ssl_cert.sh -H "$_SERVICE_VIRTUAL_HOST$" -S -C "$_SERVICE_CERTIFICATE_AGE_WARNING$","$_SERVICE_CERTIFICATE_AGE_CRITICAL$"'
}
